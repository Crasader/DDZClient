// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#ifndef PROTOBUF_room_2eproto__INCLUDED
#define PROTOBUF_room_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base.pb.h"
// @@protoc_insertion_point(includes)
namespace base {
class ErrorCode;
class ErrorCodeDefaultTypeInternal;
extern ErrorCodeDefaultTypeInternal _ErrorCode_default_instance_;
class HeartBeat;
class HeartBeatDefaultTypeInternal;
extern HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
class HeartBeatAck;
class HeartBeatAckDefaultTypeInternal;
extern HeartBeatAckDefaultTypeInternal _HeartBeatAck_default_instance_;
}  // namespace base
namespace room {
class CreateRoomReq;
class CreateRoomReqDefaultTypeInternal;
extern CreateRoomReqDefaultTypeInternal _CreateRoomReq_default_instance_;
class CreateRoomResp;
class CreateRoomRespDefaultTypeInternal;
extern CreateRoomRespDefaultTypeInternal _CreateRoomResp_default_instance_;
class EnterRoomNtf;
class EnterRoomNtfDefaultTypeInternal;
extern EnterRoomNtfDefaultTypeInternal _EnterRoomNtf_default_instance_;
class EnterRoomReq;
class EnterRoomReqDefaultTypeInternal;
extern EnterRoomReqDefaultTypeInternal _EnterRoomReq_default_instance_;
class EnterRoomResp;
class EnterRoomRespDefaultTypeInternal;
extern EnterRoomRespDefaultTypeInternal _EnterRoomResp_default_instance_;
class GameBeginNtf;
class GameBeginNtfDefaultTypeInternal;
extern GameBeginNtfDefaultTypeInternal _GameBeginNtf_default_instance_;
class GameOverNtf;
class GameOverNtfDefaultTypeInternal;
extern GameOverNtfDefaultTypeInternal _GameOverNtf_default_instance_;
class GetRoomReq;
class GetRoomReqDefaultTypeInternal;
extern GetRoomReqDefaultTypeInternal _GetRoomReq_default_instance_;
class GetRoomResp;
class GetRoomRespDefaultTypeInternal;
extern GetRoomRespDefaultTypeInternal _GetRoomResp_default_instance_;
class GetSeatInfoReq;
class GetSeatInfoReqDefaultTypeInternal;
extern GetSeatInfoReqDefaultTypeInternal _GetSeatInfoReq_default_instance_;
class GetSeatInfoResp;
class GetSeatInfoRespDefaultTypeInternal;
extern GetSeatInfoRespDefaultTypeInternal _GetSeatInfoResp_default_instance_;
class LandlordNtf;
class LandlordNtfDefaultTypeInternal;
extern LandlordNtfDefaultTypeInternal _LandlordNtf_default_instance_;
class LandlordReq;
class LandlordReqDefaultTypeInternal;
extern LandlordReqDefaultTypeInternal _LandlordReq_default_instance_;
class LandlordResp;
class LandlordRespDefaultTypeInternal;
extern LandlordRespDefaultTypeInternal _LandlordResp_default_instance_;
class LeaveRoomNtf;
class LeaveRoomNtfDefaultTypeInternal;
extern LeaveRoomNtfDefaultTypeInternal _LeaveRoomNtf_default_instance_;
class LeaveRoomReq;
class LeaveRoomReqDefaultTypeInternal;
extern LeaveRoomReqDefaultTypeInternal _LeaveRoomReq_default_instance_;
class LeaveRoomResp;
class LeaveRoomRespDefaultTypeInternal;
extern LeaveRoomRespDefaultTypeInternal _LeaveRoomResp_default_instance_;
class LostFromRoomMsg;
class LostFromRoomMsgDefaultTypeInternal;
extern LostFromRoomMsgDefaultTypeInternal _LostFromRoomMsg_default_instance_;
class PlayNtf;
class PlayNtfDefaultTypeInternal;
extern PlayNtfDefaultTypeInternal _PlayNtf_default_instance_;
class PlayReq;
class PlayReqDefaultTypeInternal;
extern PlayReqDefaultTypeInternal _PlayReq_default_instance_;
class PlayResp;
class PlayRespDefaultTypeInternal;
extern PlayRespDefaultTypeInternal _PlayResp_default_instance_;
class PutCardNtf;
class PutCardNtfDefaultTypeInternal;
extern PutCardNtfDefaultTypeInternal _PutCardNtf_default_instance_;
class PutLandlordCardNtf;
class PutLandlordCardNtfDefaultTypeInternal;
extern PutLandlordCardNtfDefaultTypeInternal _PutLandlordCardNtf_default_instance_;
class ReadyNtf;
class ReadyNtfDefaultTypeInternal;
extern ReadyNtfDefaultTypeInternal _ReadyNtf_default_instance_;
class ReadyReq;
class ReadyReqDefaultTypeInternal;
extern ReadyReqDefaultTypeInternal _ReadyReq_default_instance_;
class ReadyResp;
class ReadyRespDefaultTypeInternal;
extern ReadyRespDefaultTypeInternal _ReadyResp_default_instance_;
class ReconnectReq;
class ReconnectReqDefaultTypeInternal;
extern ReconnectReqDefaultTypeInternal _ReconnectReq_default_instance_;
class ReconnectResp;
class ReconnectRespDefaultTypeInternal;
extern ReconnectRespDefaultTypeInternal _ReconnectResp_default_instance_;
class RestartNtf;
class RestartNtfDefaultTypeInternal;
extern RestartNtfDefaultTypeInternal _RestartNtf_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
}  // namespace room

namespace room {

namespace protobuf_room_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_room_2eproto

enum RoomInfo_RoomState {
  RoomInfo_RoomState_WAIT = 0,
  RoomInfo_RoomState_START = 1
};
bool RoomInfo_RoomState_IsValid(int value);
const RoomInfo_RoomState RoomInfo_RoomState_RoomState_MIN = RoomInfo_RoomState_WAIT;
const RoomInfo_RoomState RoomInfo_RoomState_RoomState_MAX = RoomInfo_RoomState_START;
const int RoomInfo_RoomState_RoomState_ARRAYSIZE = RoomInfo_RoomState_RoomState_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomInfo_RoomState_descriptor();
inline const ::std::string& RoomInfo_RoomState_Name(RoomInfo_RoomState value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomInfo_RoomState_descriptor(), value);
}
inline bool RoomInfo_RoomState_Parse(
    const ::std::string& name, RoomInfo_RoomState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomInfo_RoomState>(
    RoomInfo_RoomState_descriptor(), name, value);
}
enum ReconnectResp_PlayState {
  ReconnectResp_PlayState_CALL = 0,
  ReconnectResp_PlayState_RUSH = 1,
  ReconnectResp_PlayState_PLAY = 2
};
bool ReconnectResp_PlayState_IsValid(int value);
const ReconnectResp_PlayState ReconnectResp_PlayState_PlayState_MIN = ReconnectResp_PlayState_CALL;
const ReconnectResp_PlayState ReconnectResp_PlayState_PlayState_MAX = ReconnectResp_PlayState_PLAY;
const int ReconnectResp_PlayState_PlayState_ARRAYSIZE = ReconnectResp_PlayState_PlayState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReconnectResp_PlayState_descriptor();
inline const ::std::string& ReconnectResp_PlayState_Name(ReconnectResp_PlayState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReconnectResp_PlayState_descriptor(), value);
}
inline bool ReconnectResp_PlayState_Parse(
    const ::std::string& name, ReconnectResp_PlayState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReconnectResp_PlayState>(
    ReconnectResp_PlayState_descriptor(), name, value);
}
// ===================================================================

class RoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.RoomInfo) */ {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  static inline const RoomInfo* internal_default_instance() {
    return reinterpret_cast<const RoomInfo*>(
               &_RoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  inline RoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RoomInfo_RoomState RoomState;
  static const RoomState WAIT =
    RoomInfo_RoomState_WAIT;
  static const RoomState START =
    RoomInfo_RoomState_START;
  static inline bool RoomState_IsValid(int value) {
    return RoomInfo_RoomState_IsValid(value);
  }
  static const RoomState RoomState_MIN =
    RoomInfo_RoomState_RoomState_MIN;
  static const RoomState RoomState_MAX =
    RoomInfo_RoomState_RoomState_MAX;
  static const int RoomState_ARRAYSIZE =
    RoomInfo_RoomState_RoomState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RoomState_descriptor() {
    return RoomInfo_RoomState_descriptor();
  }
  static inline const ::std::string& RoomState_Name(RoomState value) {
    return RoomInfo_RoomState_Name(value);
  }
  static inline bool RoomState_Parse(const ::std::string& name,
      RoomState* value) {
    return RoomInfo_RoomState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required .room.RoomInfo.RoomState state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::room::RoomInfo_RoomState state() const;
  void set_state(::room::RoomInfo_RoomState value);

  // @@protoc_insertion_point(class_scope:room.RoomInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_count();
  void clear_has_count();
  void set_has_state();
  void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  int state_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GetRoomReq) */ {
 public:
  GetRoomReq();
  virtual ~GetRoomReq();

  GetRoomReq(const GetRoomReq& from);

  inline GetRoomReq& operator=(const GetRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomReq& default_instance();

  static inline const GetRoomReq* internal_default_instance() {
    return reinterpret_cast<const GetRoomReq*>(
               &_GetRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetRoomReq* other);

  // implements Message ----------------------------------------------

  inline GetRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRoomReq& from);
  void MergeFrom(const GetRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.GetRoomReq)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GetRoomResp) */ {
 public:
  GetRoomResp();
  virtual ~GetRoomResp();

  GetRoomResp(const GetRoomResp& from);

  inline GetRoomResp& operator=(const GetRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRoomResp& default_instance();

  static inline const GetRoomResp* internal_default_instance() {
    return reinterpret_cast<const GetRoomResp*>(
               &_GetRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetRoomResp* other);

  // implements Message ----------------------------------------------

  inline GetRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRoomResp& from);
  void MergeFrom(const GetRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .room.RoomInfo rooms = 1;
  int rooms_size() const;
  void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  const ::room::RoomInfo& rooms(int index) const;
  ::room::RoomInfo* mutable_rooms(int index);
  ::room::RoomInfo* add_rooms();
  ::google::protobuf::RepeatedPtrField< ::room::RoomInfo >*
      mutable_rooms();
  const ::google::protobuf::RepeatedPtrField< ::room::RoomInfo >&
      rooms() const;

  // @@protoc_insertion_point(class_scope:room.GetRoomResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::room::RoomInfo > rooms_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LeaveRoomReq) */ {
 public:
  LeaveRoomReq();
  virtual ~LeaveRoomReq();

  LeaveRoomReq(const LeaveRoomReq& from);

  inline LeaveRoomReq& operator=(const LeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRoomReq& default_instance();

  static inline const LeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const LeaveRoomReq*>(
               &_LeaveRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LeaveRoomReq* other);

  // implements Message ----------------------------------------------

  inline LeaveRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveRoomReq& from);
  void MergeFrom(const LeaveRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.LeaveRoomReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LeaveRoomResp) */ {
 public:
  LeaveRoomResp();
  virtual ~LeaveRoomResp();

  LeaveRoomResp(const LeaveRoomResp& from);

  inline LeaveRoomResp& operator=(const LeaveRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRoomResp& default_instance();

  static inline const LeaveRoomResp* internal_default_instance() {
    return reinterpret_cast<const LeaveRoomResp*>(
               &_LeaveRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LeaveRoomResp* other);

  // implements Message ----------------------------------------------

  inline LeaveRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveRoomResp& from);
  void MergeFrom(const LeaveRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // @@protoc_insertion_point(class_scope:room.LeaveRoomResp)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.EnterRoomReq) */ {
 public:
  EnterRoomReq();
  virtual ~EnterRoomReq();

  EnterRoomReq(const EnterRoomReq& from);

  inline EnterRoomReq& operator=(const EnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomReq& default_instance();

  static inline const EnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const EnterRoomReq*>(
               &_EnterRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EnterRoomReq* other);

  // implements Message ----------------------------------------------

  inline EnterRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoomReq& from);
  void MergeFrom(const EnterRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.EnterRoomReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_account();
  void clear_has_account();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.EnterRoomResp) */ {
 public:
  EnterRoomResp();
  virtual ~EnterRoomResp();

  EnterRoomResp(const EnterRoomResp& from);

  inline EnterRoomResp& operator=(const EnterRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomResp& default_instance();

  static inline const EnterRoomResp* internal_default_instance() {
    return reinterpret_cast<const EnterRoomResp*>(
               &_EnterRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EnterRoomResp* other);

  // implements Message ----------------------------------------------

  inline EnterRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoomResp& from);
  void MergeFrom(const EnterRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 otherid = 6;
  int otherid_size() const;
  void clear_otherid();
  static const int kOtheridFieldNumber = 6;
  ::google::protobuf::uint32 otherid(int index) const;
  void set_otherid(int index, ::google::protobuf::uint32 value);
  void add_otherid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      otherid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_otherid();

  // optional bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // optional uint32 rid = 3;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 3;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // optional uint32 index = 4;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional bool ready = 5;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 5;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:room.EnterRoomResp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_desc();
  void clear_has_desc();
  void set_has_rid();
  void clear_has_rid();
  void set_has_index();
  void clear_has_index();
  void set_has_ready();
  void clear_has_ready();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherid_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  int result_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 index_;
  bool ready_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSeatInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GetSeatInfoReq) */ {
 public:
  GetSeatInfoReq();
  virtual ~GetSeatInfoReq();

  GetSeatInfoReq(const GetSeatInfoReq& from);

  inline GetSeatInfoReq& operator=(const GetSeatInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSeatInfoReq& default_instance();

  static inline const GetSeatInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetSeatInfoReq*>(
               &_GetSeatInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetSeatInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetSeatInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSeatInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSeatInfoReq& from);
  void MergeFrom(const GetSeatInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSeatInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 find = 3;
  bool has_find() const;
  void clear_find();
  static const int kFindFieldNumber = 3;
  ::google::protobuf::uint32 find() const;
  void set_find(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.GetSeatInfoReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_find();
  void clear_has_find();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 find_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSeatInfoResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GetSeatInfoResp) */ {
 public:
  GetSeatInfoResp();
  virtual ~GetSeatInfoResp();

  GetSeatInfoResp(const GetSeatInfoResp& from);

  inline GetSeatInfoResp& operator=(const GetSeatInfoResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSeatInfoResp& default_instance();

  static inline const GetSeatInfoResp* internal_default_instance() {
    return reinterpret_cast<const GetSeatInfoResp*>(
               &_GetSeatInfoResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetSeatInfoResp* other);

  // implements Message ----------------------------------------------

  inline GetSeatInfoResp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSeatInfoResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSeatInfoResp& from);
  void MergeFrom(const GetSeatInfoResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSeatInfoResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required bytes account = 5;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 5;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // required uint32 uid = 3;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 index = 4;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // required bool ready = 6;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 6;
  bool ready() const;
  void set_ready(bool value);

  // required uint32 cnumber = 7;
  bool has_cnumber() const;
  void clear_cnumber();
  static const int kCnumberFieldNumber = 7;
  ::google::protobuf::uint32 cnumber() const;
  void set_cnumber(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.GetSeatInfoResp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_desc();
  void clear_has_desc();
  void set_has_uid();
  void clear_has_uid();
  void set_has_index();
  void clear_has_index();
  void set_has_account();
  void clear_has_account();
  void set_has_ready();
  void clear_has_ready();
  void set_has_cnumber();
  void clear_has_cnumber();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  int result_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 index_;
  bool ready_;
  ::google::protobuf::uint32 cnumber_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.CreateRoomReq) */ {
 public:
  CreateRoomReq();
  virtual ~CreateRoomReq();

  CreateRoomReq(const CreateRoomReq& from);

  inline CreateRoomReq& operator=(const CreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomReq& default_instance();

  static inline const CreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const CreateRoomReq*>(
               &_CreateRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CreateRoomReq* other);

  // implements Message ----------------------------------------------

  inline CreateRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomReq& from);
  void MergeFrom(const CreateRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.CreateRoomReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_account();
  void clear_has_account();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRoomResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.CreateRoomResp) */ {
 public:
  CreateRoomResp();
  virtual ~CreateRoomResp();

  CreateRoomResp(const CreateRoomResp& from);

  inline CreateRoomResp& operator=(const CreateRoomResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomResp& default_instance();

  static inline const CreateRoomResp* internal_default_instance() {
    return reinterpret_cast<const CreateRoomResp*>(
               &_CreateRoomResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CreateRoomResp* other);

  // implements Message ----------------------------------------------

  inline CreateRoomResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomResp& from);
  void MergeFrom(const CreateRoomResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const void* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // optional uint32 rid = 3;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 3;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // optional uint32 index = 4;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 4;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.CreateRoomResp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_desc();
  void clear_has_desc();
  void set_has_rid();
  void clear_has_rid();
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  int result_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 index_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoomNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.EnterRoomNtf) */ {
 public:
  EnterRoomNtf();
  virtual ~EnterRoomNtf();

  EnterRoomNtf(const EnterRoomNtf& from);

  inline EnterRoomNtf& operator=(const EnterRoomNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomNtf& default_instance();

  static inline const EnterRoomNtf* internal_default_instance() {
    return reinterpret_cast<const EnterRoomNtf*>(
               &_EnterRoomNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(EnterRoomNtf* other);

  // implements Message ----------------------------------------------

  inline EnterRoomNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoomNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoomNtf& from);
  void MergeFrom(const EnterRoomNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoomNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // required bool ready = 5;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 5;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:room.EnterRoomNtf)
 private:
  void set_has_rid();
  void clear_has_rid();
  void set_has_uid();
  void clear_has_uid();
  void set_has_index();
  void clear_has_index();
  void set_has_ready();
  void clear_has_ready();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 index_;
  bool ready_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveRoomNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LeaveRoomNtf) */ {
 public:
  LeaveRoomNtf();
  virtual ~LeaveRoomNtf();

  LeaveRoomNtf(const LeaveRoomNtf& from);

  inline LeaveRoomNtf& operator=(const LeaveRoomNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveRoomNtf& default_instance();

  static inline const LeaveRoomNtf* internal_default_instance() {
    return reinterpret_cast<const LeaveRoomNtf*>(
               &_LeaveRoomNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(LeaveRoomNtf* other);

  // implements Message ----------------------------------------------

  inline LeaveRoomNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveRoomNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveRoomNtf& from);
  void MergeFrom(const LeaveRoomNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveRoomNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.LeaveRoomNtf)
 private:
  void set_has_rid();
  void clear_has_rid();
  void set_has_uid();
  void clear_has_uid();
  void set_has_index();
  void clear_has_index();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 index_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.ReadyReq) */ {
 public:
  ReadyReq();
  virtual ~ReadyReq();

  ReadyReq(const ReadyReq& from);

  inline ReadyReq& operator=(const ReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyReq& default_instance();

  static inline const ReadyReq* internal_default_instance() {
    return reinterpret_cast<const ReadyReq*>(
               &_ReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ReadyReq* other);

  // implements Message ----------------------------------------------

  inline ReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadyReq& from);
  void MergeFrom(const ReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required bool ready = 3;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 3;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:room.ReadyReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_ready();
  void clear_has_ready();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  bool ready_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadyResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.ReadyResp) */ {
 public:
  ReadyResp();
  virtual ~ReadyResp();

  ReadyResp(const ReadyResp& from);

  inline ReadyResp& operator=(const ReadyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyResp& default_instance();

  static inline const ReadyResp* internal_default_instance() {
    return reinterpret_cast<const ReadyResp*>(
               &_ReadyResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ReadyResp* other);

  // implements Message ----------------------------------------------

  inline ReadyResp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadyResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadyResp& from);
  void MergeFrom(const ReadyResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadyResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // @@protoc_insertion_point(class_scope:room.ReadyResp)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReadyNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.ReadyNtf) */ {
 public:
  ReadyNtf();
  virtual ~ReadyNtf();

  ReadyNtf(const ReadyNtf& from);

  inline ReadyNtf& operator=(const ReadyNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyNtf& default_instance();

  static inline const ReadyNtf* internal_default_instance() {
    return reinterpret_cast<const ReadyNtf*>(
               &_ReadyNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ReadyNtf* other);

  // implements Message ----------------------------------------------

  inline ReadyNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadyNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadyNtf& from);
  void MergeFrom(const ReadyNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadyNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // required bool ready = 4;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 4;
  bool ready() const;
  void set_ready(bool value);

  // @@protoc_insertion_point(class_scope:room.ReadyNtf)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_index();
  void clear_has_index();
  void set_has_ready();
  void clear_has_ready();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 index_;
  bool ready_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameBeginNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GameBeginNtf) */ {
 public:
  GameBeginNtf();
  virtual ~GameBeginNtf();

  GameBeginNtf(const GameBeginNtf& from);

  inline GameBeginNtf& operator=(const GameBeginNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameBeginNtf& default_instance();

  static inline const GameBeginNtf* internal_default_instance() {
    return reinterpret_cast<const GameBeginNtf*>(
               &_GameBeginNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GameBeginNtf* other);

  // implements Message ----------------------------------------------

  inline GameBeginNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  GameBeginNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameBeginNtf& from);
  void MergeFrom(const GameBeginNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameBeginNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 first = 2;
  bool has_first() const;
  void clear_first();
  static const int kFirstFieldNumber = 2;
  ::google::protobuf::uint32 first() const;
  void set_first(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.GameBeginNtf)
 private:
  void set_has_rid();
  void clear_has_rid();
  void set_has_first();
  void clear_has_first();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 first_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestartNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.RestartNtf) */ {
 public:
  RestartNtf();
  virtual ~RestartNtf();

  RestartNtf(const RestartNtf& from);

  inline RestartNtf& operator=(const RestartNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestartNtf& default_instance();

  static inline const RestartNtf* internal_default_instance() {
    return reinterpret_cast<const RestartNtf*>(
               &_RestartNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(RestartNtf* other);

  // implements Message ----------------------------------------------

  inline RestartNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  RestartNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestartNtf& from);
  void MergeFrom(const RestartNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestartNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 first = 1;
  bool has_first() const;
  void clear_first();
  static const int kFirstFieldNumber = 1;
  ::google::protobuf::uint32 first() const;
  void set_first(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.RestartNtf)
 private:
  void set_has_first();
  void clear_has_first();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 first_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutCardNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.PutCardNtf) */ {
 public:
  PutCardNtf();
  virtual ~PutCardNtf();

  PutCardNtf(const PutCardNtf& from);

  inline PutCardNtf& operator=(const PutCardNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutCardNtf& default_instance();

  static inline const PutCardNtf* internal_default_instance() {
    return reinterpret_cast<const PutCardNtf*>(
               &_PutCardNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PutCardNtf* other);

  // implements Message ----------------------------------------------

  inline PutCardNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  PutCardNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutCardNtf& from);
  void MergeFrom(const PutCardNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutCardNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 2;
  int cid_size() const;
  void clear_cid();
  static const int kCidFieldNumber = 2;
  ::google::protobuf::uint32 cid(int index) const;
  void set_cid(int index, ::google::protobuf::uint32 value);
  void add_cid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.PutCardNtf)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  ::google::protobuf::uint32 uid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutLandlordCardNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.PutLandlordCardNtf) */ {
 public:
  PutLandlordCardNtf();
  virtual ~PutLandlordCardNtf();

  PutLandlordCardNtf(const PutLandlordCardNtf& from);

  inline PutLandlordCardNtf& operator=(const PutLandlordCardNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutLandlordCardNtf& default_instance();

  static inline const PutLandlordCardNtf* internal_default_instance() {
    return reinterpret_cast<const PutLandlordCardNtf*>(
               &_PutLandlordCardNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(PutLandlordCardNtf* other);

  // implements Message ----------------------------------------------

  inline PutLandlordCardNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  PutLandlordCardNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutLandlordCardNtf& from);
  void MergeFrom(const PutLandlordCardNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutLandlordCardNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 2;
  int cid_size() const;
  void clear_cid();
  static const int kCidFieldNumber = 2;
  ::google::protobuf::uint32 cid(int index) const;
  void set_cid(int index, ::google::protobuf::uint32 value);
  void add_cid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // required uint32 landlord = 1;
  bool has_landlord() const;
  void clear_landlord();
  static const int kLandlordFieldNumber = 1;
  ::google::protobuf::uint32 landlord() const;
  void set_landlord(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.PutLandlordCardNtf)
 private:
  void set_has_landlord();
  void clear_has_landlord();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  ::google::protobuf::uint32 landlord_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LandlordNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LandlordNtf) */ {
 public:
  LandlordNtf();
  virtual ~LandlordNtf();

  LandlordNtf(const LandlordNtf& from);

  inline LandlordNtf& operator=(const LandlordNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LandlordNtf& default_instance();

  static inline const LandlordNtf* internal_default_instance() {
    return reinterpret_cast<const LandlordNtf*>(
               &_LandlordNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(LandlordNtf* other);

  // implements Message ----------------------------------------------

  inline LandlordNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  LandlordNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LandlordNtf& from);
  void MergeFrom(const LandlordNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LandlordNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cindex = 1;
  bool has_cindex() const;
  void clear_cindex();
  static const int kCindexFieldNumber = 1;
  ::google::protobuf::uint32 cindex() const;
  void set_cindex(::google::protobuf::uint32 value);

  // required uint32 nindex = 2;
  bool has_nindex() const;
  void clear_nindex();
  static const int kNindexFieldNumber = 2;
  ::google::protobuf::uint32 nindex() const;
  void set_nindex(::google::protobuf::uint32 value);

  // required bool call = 3;
  bool has_call() const;
  void clear_call();
  static const int kCallFieldNumber = 3;
  bool call() const;
  void set_call(bool value);

  // required bool ctype = 4;
  bool has_ctype() const;
  void clear_ctype();
  static const int kCtypeFieldNumber = 4;
  bool ctype() const;
  void set_ctype(bool value);

  // required bool ntype = 5;
  bool has_ntype() const;
  void clear_ntype();
  static const int kNtypeFieldNumber = 5;
  bool ntype() const;
  void set_ntype(bool value);

  // @@protoc_insertion_point(class_scope:room.LandlordNtf)
 private:
  void set_has_cindex();
  void clear_has_cindex();
  void set_has_nindex();
  void clear_has_nindex();
  void set_has_call();
  void clear_has_call();
  void set_has_ctype();
  void clear_has_ctype();
  void set_has_ntype();
  void clear_has_ntype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 cindex_;
  ::google::protobuf::uint32 nindex_;
  bool call_;
  bool ctype_;
  bool ntype_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LandlordReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LandlordReq) */ {
 public:
  LandlordReq();
  virtual ~LandlordReq();

  LandlordReq(const LandlordReq& from);

  inline LandlordReq& operator=(const LandlordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LandlordReq& default_instance();

  static inline const LandlordReq* internal_default_instance() {
    return reinterpret_cast<const LandlordReq*>(
               &_LandlordReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(LandlordReq* other);

  // implements Message ----------------------------------------------

  inline LandlordReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LandlordReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LandlordReq& from);
  void MergeFrom(const LandlordReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LandlordReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required bool call = 3;
  bool has_call() const;
  void clear_call();
  static const int kCallFieldNumber = 3;
  bool call() const;
  void set_call(bool value);

  // @@protoc_insertion_point(class_scope:room.LandlordReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();
  void set_has_call();
  void clear_has_call();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  bool call_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LandlordResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LandlordResp) */ {
 public:
  LandlordResp();
  virtual ~LandlordResp();

  LandlordResp(const LandlordResp& from);

  inline LandlordResp& operator=(const LandlordResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LandlordResp& default_instance();

  static inline const LandlordResp* internal_default_instance() {
    return reinterpret_cast<const LandlordResp*>(
               &_LandlordResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(LandlordResp* other);

  // implements Message ----------------------------------------------

  inline LandlordResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LandlordResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LandlordResp& from);
  void MergeFrom(const LandlordResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LandlordResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // @@protoc_insertion_point(class_scope:room.LandlordResp)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.PlayReq) */ {
 public:
  PlayReq();
  virtual ~PlayReq();

  PlayReq(const PlayReq& from);

  inline PlayReq& operator=(const PlayReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayReq& default_instance();

  static inline const PlayReq* internal_default_instance() {
    return reinterpret_cast<const PlayReq*>(
               &_PlayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PlayReq* other);

  // implements Message ----------------------------------------------

  inline PlayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayReq& from);
  void MergeFrom(const PlayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 3;
  int cid_size() const;
  void clear_cid();
  static const int kCidFieldNumber = 3;
  ::google::protobuf::uint32 cid(int index) const;
  void set_cid(int index, ::google::protobuf::uint32 value);
  void add_cid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // required uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // required uint32 rid = 2;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.PlayReq)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_rid();
  void clear_has_rid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 rid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.PlayResp) */ {
 public:
  PlayResp();
  virtual ~PlayResp();

  PlayResp(const PlayResp& from);

  inline PlayResp& operator=(const PlayResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayResp& default_instance();

  static inline const PlayResp* internal_default_instance() {
    return reinterpret_cast<const PlayResp*>(
               &_PlayResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(PlayResp* other);

  // implements Message ----------------------------------------------

  inline PlayResp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayResp& from);
  void MergeFrom(const PlayResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // optional uint32 next = 2;
  bool has_next() const;
  void clear_next();
  static const int kNextFieldNumber = 2;
  ::google::protobuf::uint32 next() const;
  void set_next(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.PlayResp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_next();
  void clear_has_next();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  ::google::protobuf::uint32 next_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.PlayNtf) */ {
 public:
  PlayNtf();
  virtual ~PlayNtf();

  PlayNtf(const PlayNtf& from);

  inline PlayNtf& operator=(const PlayNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayNtf& default_instance();

  static inline const PlayNtf* internal_default_instance() {
    return reinterpret_cast<const PlayNtf*>(
               &_PlayNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PlayNtf* other);

  // implements Message ----------------------------------------------

  inline PlayNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayNtf& from);
  void MergeFrom(const PlayNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 cid = 3;
  int cid_size() const;
  void clear_cid();
  static const int kCidFieldNumber = 3;
  ::google::protobuf::uint32 cid(int index) const;
  void set_cid(int index, ::google::protobuf::uint32 value);
  void add_cid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // required uint32 current = 1;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 1;
  ::google::protobuf::uint32 current() const;
  void set_current(::google::protobuf::uint32 value);

  // required uint32 next = 2;
  bool has_next() const;
  void clear_next();
  static const int kNextFieldNumber = 2;
  ::google::protobuf::uint32 next() const;
  void set_next(::google::protobuf::uint32 value);

  // required uint32 multiple = 4;
  bool has_multiple() const;
  void clear_multiple();
  static const int kMultipleFieldNumber = 4;
  ::google::protobuf::uint32 multiple() const;
  void set_multiple(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.PlayNtf)
 private:
  void set_has_current();
  void clear_has_current();
  void set_has_next();
  void clear_has_next();
  void set_has_multiple();
  void clear_has_multiple();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  ::google::protobuf::uint32 current_;
  ::google::protobuf::uint32 next_;
  ::google::protobuf::uint32 multiple_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameOverNtf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.GameOverNtf) */ {
 public:
  GameOverNtf();
  virtual ~GameOverNtf();

  GameOverNtf(const GameOverNtf& from);

  inline GameOverNtf& operator=(const GameOverNtf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameOverNtf& default_instance();

  static inline const GameOverNtf* internal_default_instance() {
    return reinterpret_cast<const GameOverNtf*>(
               &_GameOverNtf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(GameOverNtf* other);

  // implements Message ----------------------------------------------

  inline GameOverNtf* New() const PROTOBUF_FINAL { return New(NULL); }

  GameOverNtf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameOverNtf& from);
  void MergeFrom(const GameOverNtf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameOverNtf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 winner = 2;
  bool has_winner() const;
  void clear_winner();
  static const int kWinnerFieldNumber = 2;
  ::google::protobuf::uint32 winner() const;
  void set_winner(::google::protobuf::uint32 value);

  // required uint32 landlord = 3;
  bool has_landlord() const;
  void clear_landlord();
  static const int kLandlordFieldNumber = 3;
  ::google::protobuf::uint32 landlord() const;
  void set_landlord(::google::protobuf::uint32 value);

  // required uint32 multiple = 4;
  bool has_multiple() const;
  void clear_multiple();
  static const int kMultipleFieldNumber = 4;
  ::google::protobuf::uint32 multiple() const;
  void set_multiple(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.GameOverNtf)
 private:
  void set_has_rid();
  void clear_has_rid();
  void set_has_winner();
  void clear_has_winner();
  void set_has_landlord();
  void clear_has_landlord();
  void set_has_multiple();
  void clear_has_multiple();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 winner_;
  ::google::protobuf::uint32 landlord_;
  ::google::protobuf::uint32 multiple_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LostFromRoomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.LostFromRoomMsg) */ {
 public:
  LostFromRoomMsg();
  virtual ~LostFromRoomMsg();

  LostFromRoomMsg(const LostFromRoomMsg& from);

  inline LostFromRoomMsg& operator=(const LostFromRoomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LostFromRoomMsg& default_instance();

  static inline const LostFromRoomMsg* internal_default_instance() {
    return reinterpret_cast<const LostFromRoomMsg*>(
               &_LostFromRoomMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(LostFromRoomMsg* other);

  // implements Message ----------------------------------------------

  inline LostFromRoomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  LostFromRoomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LostFromRoomMsg& from);
  void MergeFrom(const LostFromRoomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LostFromRoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.LostFromRoomMsg)
 private:
  void set_has_rid();
  void clear_has_rid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReconnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.ReconnectReq) */ {
 public:
  ReconnectReq();
  virtual ~ReconnectReq();

  ReconnectReq(const ReconnectReq& from);

  inline ReconnectReq& operator=(const ReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectReq& default_instance();

  static inline const ReconnectReq* internal_default_instance() {
    return reinterpret_cast<const ReconnectReq*>(
               &_ReconnectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(ReconnectReq* other);

  // implements Message ----------------------------------------------

  inline ReconnectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReconnectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReconnectReq& from);
  void MergeFrom(const ReconnectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReconnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rid = 1;
  bool has_rid() const;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::uint32 rid() const;
  void set_rid(::google::protobuf::uint32 value);

  // required uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.ReconnectReq)
 private:
  void set_has_rid();
  void clear_has_rid();
  void set_has_uid();
  void clear_has_uid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 rid_;
  ::google::protobuf::uint32 uid_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReconnectResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:room.ReconnectResp) */ {
 public:
  ReconnectResp();
  virtual ~ReconnectResp();

  ReconnectResp(const ReconnectResp& from);

  inline ReconnectResp& operator=(const ReconnectResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconnectResp& default_instance();

  static inline const ReconnectResp* internal_default_instance() {
    return reinterpret_cast<const ReconnectResp*>(
               &_ReconnectResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ReconnectResp* other);

  // implements Message ----------------------------------------------

  inline ReconnectResp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReconnectResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReconnectResp& from);
  void MergeFrom(const ReconnectResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReconnectResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReconnectResp_PlayState PlayState;
  static const PlayState CALL =
    ReconnectResp_PlayState_CALL;
  static const PlayState RUSH =
    ReconnectResp_PlayState_RUSH;
  static const PlayState PLAY =
    ReconnectResp_PlayState_PLAY;
  static inline bool PlayState_IsValid(int value) {
    return ReconnectResp_PlayState_IsValid(value);
  }
  static const PlayState PlayState_MIN =
    ReconnectResp_PlayState_PlayState_MIN;
  static const PlayState PlayState_MAX =
    ReconnectResp_PlayState_PlayState_MAX;
  static const int PlayState_ARRAYSIZE =
    ReconnectResp_PlayState_PlayState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlayState_descriptor() {
    return ReconnectResp_PlayState_descriptor();
  }
  static inline const ::std::string& PlayState_Name(PlayState value) {
    return ReconnectResp_PlayState_Name(value);
  }
  static inline bool PlayState_Parse(const ::std::string& name,
      PlayState* value) {
    return ReconnectResp_PlayState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 otherid = 5;
  int otherid_size() const;
  void clear_otherid();
  static const int kOtheridFieldNumber = 5;
  ::google::protobuf::uint32 otherid(int index) const;
  void set_otherid(int index, ::google::protobuf::uint32 value);
  void add_otherid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      otherid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_otherid();

  // repeated uint32 cid = 6;
  int cid_size() const;
  void clear_cid();
  static const int kCidFieldNumber = 6;
  ::google::protobuf::uint32 cid(int index) const;
  void set_cid(int index, ::google::protobuf::uint32 value);
  void add_cid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cid();

  // required .base.ERROR_CODE result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::base::ERROR_CODE result() const;
  void set_result(::base::ERROR_CODE value);

  // required uint32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // required uint32 current = 3;
  bool has_current() const;
  void clear_current();
  static const int kCurrentFieldNumber = 3;
  ::google::protobuf::uint32 current() const;
  void set_current(::google::protobuf::uint32 value);

  // required uint32 landlord = 4;
  bool has_landlord() const;
  void clear_landlord();
  static const int kLandlordFieldNumber = 4;
  ::google::protobuf::uint32 landlord() const;
  void set_landlord(::google::protobuf::uint32 value);

  // required .room.ReconnectResp.PlayState state = 7;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::room::ReconnectResp_PlayState state() const;
  void set_state(::room::ReconnectResp_PlayState value);

  // required uint32 multiple = 8;
  bool has_multiple() const;
  void clear_multiple();
  static const int kMultipleFieldNumber = 8;
  ::google::protobuf::uint32 multiple() const;
  void set_multiple(::google::protobuf::uint32 value);

  // required uint32 noplay = 9;
  bool has_noplay() const;
  void clear_noplay();
  static const int kNoplayFieldNumber = 9;
  ::google::protobuf::uint32 noplay() const;
  void set_noplay(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:room.ReconnectResp)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_index();
  void clear_has_index();
  void set_has_current();
  void clear_has_current();
  void set_has_landlord();
  void clear_has_landlord();
  void set_has_state();
  void clear_has_state();
  void set_has_multiple();
  void clear_has_multiple();
  void set_has_noplay();
  void clear_has_noplay();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > otherid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cid_;
  int result_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 current_;
  ::google::protobuf::uint32 landlord_;
  int state_;
  ::google::protobuf::uint32 multiple_;
  ::google::protobuf::uint32 noplay_;
  friend struct protobuf_room_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomInfo

// required uint32 id = 1;
inline bool RoomInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomInfo::id() const {
  // @@protoc_insertion_point(field_get:room.RoomInfo.id)
  return id_;
}
inline void RoomInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:room.RoomInfo.id)
}

// required bytes name = 2;
inline bool RoomInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& RoomInfo::name() const {
  // @@protoc_insertion_point(field_get:room.RoomInfo.name)
  return name_.GetNoArena();
}
inline void RoomInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.RoomInfo.name)
}
#if LANG_CXX11
inline void RoomInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.RoomInfo.name)
}
#endif
inline void RoomInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.RoomInfo.name)
}
inline void RoomInfo::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.RoomInfo.name)
}
inline ::std::string* RoomInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:room.RoomInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomInfo::release_name() {
  // @@protoc_insertion_point(field_release:room.RoomInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:room.RoomInfo.name)
}

// required uint32 count = 3;
inline bool RoomInfo::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RoomInfo::count() const {
  // @@protoc_insertion_point(field_get:room.RoomInfo.count)
  return count_;
}
inline void RoomInfo::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:room.RoomInfo.count)
}

// required .room.RoomInfo.RoomState state = 4;
inline bool RoomInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::room::RoomInfo_RoomState RoomInfo::state() const {
  // @@protoc_insertion_point(field_get:room.RoomInfo.state)
  return static_cast< ::room::RoomInfo_RoomState >(state_);
}
inline void RoomInfo::set_state(::room::RoomInfo_RoomState value) {
  assert(::room::RoomInfo_RoomState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:room.RoomInfo.state)
}

// -------------------------------------------------------------------

// GetRoomReq

// required uint32 id = 1;
inline bool GetRoomReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRoomReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRoomReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRoomReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 GetRoomReq::id() const {
  // @@protoc_insertion_point(field_get:room.GetRoomReq.id)
  return id_;
}
inline void GetRoomReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:room.GetRoomReq.id)
}

// -------------------------------------------------------------------

// GetRoomResp

// repeated .room.RoomInfo rooms = 1;
inline int GetRoomResp::rooms_size() const {
  return rooms_.size();
}
inline void GetRoomResp::clear_rooms() {
  rooms_.Clear();
}
inline const ::room::RoomInfo& GetRoomResp::rooms(int index) const {
  // @@protoc_insertion_point(field_get:room.GetRoomResp.rooms)
  return rooms_.Get(index);
}
inline ::room::RoomInfo* GetRoomResp::mutable_rooms(int index) {
  // @@protoc_insertion_point(field_mutable:room.GetRoomResp.rooms)
  return rooms_.Mutable(index);
}
inline ::room::RoomInfo* GetRoomResp::add_rooms() {
  // @@protoc_insertion_point(field_add:room.GetRoomResp.rooms)
  return rooms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::room::RoomInfo >*
GetRoomResp::mutable_rooms() {
  // @@protoc_insertion_point(field_mutable_list:room.GetRoomResp.rooms)
  return &rooms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::room::RoomInfo >&
GetRoomResp::rooms() const {
  // @@protoc_insertion_point(field_list:room.GetRoomResp.rooms)
  return rooms_;
}

// -------------------------------------------------------------------

// LeaveRoomReq

// required uint32 uid = 1;
inline bool LeaveRoomReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRoomReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRoomReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRoomReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 LeaveRoomReq::uid() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomReq.uid)
  return uid_;
}
inline void LeaveRoomReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomReq.uid)
}

// required uint32 rid = 2;
inline bool LeaveRoomReq::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveRoomReq::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveRoomReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveRoomReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 LeaveRoomReq::rid() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomReq.rid)
  return rid_;
}
inline void LeaveRoomReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomReq.rid)
}

// -------------------------------------------------------------------

// LeaveRoomResp

// required .base.ERROR_CODE result = 1;
inline bool LeaveRoomResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRoomResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRoomResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRoomResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE LeaveRoomResp::result() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void LeaveRoomResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomResp.result)
}

// -------------------------------------------------------------------

// EnterRoomReq

// required uint32 uid = 1;
inline bool EnterRoomReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 EnterRoomReq::uid() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomReq.uid)
  return uid_;
}
inline void EnterRoomReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomReq.uid)
}

// required uint32 rid = 2;
inline bool EnterRoomReq::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterRoomReq::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterRoomReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterRoomReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 EnterRoomReq::rid() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomReq.rid)
  return rid_;
}
inline void EnterRoomReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomReq.rid)
}

// required bytes account = 3;
inline bool EnterRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& EnterRoomReq::account() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomReq.account)
  return account_.GetNoArena();
}
inline void EnterRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.EnterRoomReq.account)
}
#if LANG_CXX11
inline void EnterRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.EnterRoomReq.account)
}
#endif
inline void EnterRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.EnterRoomReq.account)
}
inline void EnterRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.EnterRoomReq.account)
}
inline ::std::string* EnterRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:room.EnterRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:room.EnterRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:room.EnterRoomReq.account)
}

// -------------------------------------------------------------------

// EnterRoomResp

// required .base.ERROR_CODE result = 1;
inline bool EnterRoomResp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomResp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE EnterRoomResp::result() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void EnterRoomResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.result)
}

// optional bytes desc = 2;
inline bool EnterRoomResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& EnterRoomResp::desc() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.desc)
  return desc_.GetNoArena();
}
inline void EnterRoomResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.desc)
}
#if LANG_CXX11
inline void EnterRoomResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.EnterRoomResp.desc)
}
#endif
inline void EnterRoomResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.EnterRoomResp.desc)
}
inline void EnterRoomResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.EnterRoomResp.desc)
}
inline ::std::string* EnterRoomResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:room.EnterRoomResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoomResp::release_desc() {
  // @@protoc_insertion_point(field_release:room.EnterRoomResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:room.EnterRoomResp.desc)
}

// optional uint32 rid = 3;
inline bool EnterRoomResp::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterRoomResp::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterRoomResp::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterRoomResp::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 EnterRoomResp::rid() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.rid)
  return rid_;
}
inline void EnterRoomResp::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.rid)
}

// optional uint32 index = 4;
inline bool EnterRoomResp::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterRoomResp::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterRoomResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterRoomResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 EnterRoomResp::index() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.index)
  return index_;
}
inline void EnterRoomResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.index)
}

// optional bool ready = 5;
inline bool EnterRoomResp::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnterRoomResp::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnterRoomResp::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnterRoomResp::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool EnterRoomResp::ready() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.ready)
  return ready_;
}
inline void EnterRoomResp::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.ready)
}

// repeated uint32 otherid = 6;
inline int EnterRoomResp::otherid_size() const {
  return otherid_.size();
}
inline void EnterRoomResp::clear_otherid() {
  otherid_.Clear();
}
inline ::google::protobuf::uint32 EnterRoomResp::otherid(int index) const {
  // @@protoc_insertion_point(field_get:room.EnterRoomResp.otherid)
  return otherid_.Get(index);
}
inline void EnterRoomResp::set_otherid(int index, ::google::protobuf::uint32 value) {
  otherid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.EnterRoomResp.otherid)
}
inline void EnterRoomResp::add_otherid(::google::protobuf::uint32 value) {
  otherid_.Add(value);
  // @@protoc_insertion_point(field_add:room.EnterRoomResp.otherid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
EnterRoomResp::otherid() const {
  // @@protoc_insertion_point(field_list:room.EnterRoomResp.otherid)
  return otherid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
EnterRoomResp::mutable_otherid() {
  // @@protoc_insertion_point(field_mutable_list:room.EnterRoomResp.otherid)
  return &otherid_;
}

// -------------------------------------------------------------------

// GetSeatInfoReq

// required uint32 uid = 1;
inline bool GetSeatInfoReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSeatInfoReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSeatInfoReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSeatInfoReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetSeatInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoReq.uid)
  return uid_;
}
inline void GetSeatInfoReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoReq.uid)
}

// required uint32 rid = 2;
inline bool GetSeatInfoReq::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSeatInfoReq::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSeatInfoReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSeatInfoReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 GetSeatInfoReq::rid() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoReq.rid)
  return rid_;
}
inline void GetSeatInfoReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoReq.rid)
}

// required uint32 find = 3;
inline bool GetSeatInfoReq::has_find() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSeatInfoReq::set_has_find() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSeatInfoReq::clear_has_find() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSeatInfoReq::clear_find() {
  find_ = 0u;
  clear_has_find();
}
inline ::google::protobuf::uint32 GetSeatInfoReq::find() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoReq.find)
  return find_;
}
inline void GetSeatInfoReq::set_find(::google::protobuf::uint32 value) {
  set_has_find();
  find_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoReq.find)
}

// -------------------------------------------------------------------

// GetSeatInfoResp

// required .base.ERROR_CODE result = 1;
inline bool GetSeatInfoResp::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSeatInfoResp::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSeatInfoResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSeatInfoResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE GetSeatInfoResp::result() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void GetSeatInfoResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.result)
}

// optional bytes desc = 2;
inline bool GetSeatInfoResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSeatInfoResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSeatInfoResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSeatInfoResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& GetSeatInfoResp::desc() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.desc)
  return desc_.GetNoArena();
}
inline void GetSeatInfoResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.desc)
}
#if LANG_CXX11
inline void GetSeatInfoResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.GetSeatInfoResp.desc)
}
#endif
inline void GetSeatInfoResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.GetSeatInfoResp.desc)
}
inline void GetSeatInfoResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.GetSeatInfoResp.desc)
}
inline ::std::string* GetSeatInfoResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:room.GetSeatInfoResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSeatInfoResp::release_desc() {
  // @@protoc_insertion_point(field_release:room.GetSeatInfoResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSeatInfoResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:room.GetSeatInfoResp.desc)
}

// required uint32 uid = 3;
inline bool GetSeatInfoResp::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetSeatInfoResp::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetSeatInfoResp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetSeatInfoResp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetSeatInfoResp::uid() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.uid)
  return uid_;
}
inline void GetSeatInfoResp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.uid)
}

// required uint32 index = 4;
inline bool GetSeatInfoResp::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetSeatInfoResp::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetSeatInfoResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetSeatInfoResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 GetSeatInfoResp::index() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.index)
  return index_;
}
inline void GetSeatInfoResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.index)
}

// required bytes account = 5;
inline bool GetSeatInfoResp::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSeatInfoResp::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSeatInfoResp::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSeatInfoResp::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& GetSeatInfoResp::account() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.account)
  return account_.GetNoArena();
}
inline void GetSeatInfoResp::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.account)
}
#if LANG_CXX11
inline void GetSeatInfoResp::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.GetSeatInfoResp.account)
}
#endif
inline void GetSeatInfoResp::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.GetSeatInfoResp.account)
}
inline void GetSeatInfoResp::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.GetSeatInfoResp.account)
}
inline ::std::string* GetSeatInfoResp::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:room.GetSeatInfoResp.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSeatInfoResp::release_account() {
  // @@protoc_insertion_point(field_release:room.GetSeatInfoResp.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSeatInfoResp::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:room.GetSeatInfoResp.account)
}

// required bool ready = 6;
inline bool GetSeatInfoResp::has_ready() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetSeatInfoResp::set_has_ready() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetSeatInfoResp::clear_has_ready() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetSeatInfoResp::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool GetSeatInfoResp::ready() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.ready)
  return ready_;
}
inline void GetSeatInfoResp::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.ready)
}

// required uint32 cnumber = 7;
inline bool GetSeatInfoResp::has_cnumber() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetSeatInfoResp::set_has_cnumber() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetSeatInfoResp::clear_has_cnumber() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetSeatInfoResp::clear_cnumber() {
  cnumber_ = 0u;
  clear_has_cnumber();
}
inline ::google::protobuf::uint32 GetSeatInfoResp::cnumber() const {
  // @@protoc_insertion_point(field_get:room.GetSeatInfoResp.cnumber)
  return cnumber_;
}
inline void GetSeatInfoResp::set_cnumber(::google::protobuf::uint32 value) {
  set_has_cnumber();
  cnumber_ = value;
  // @@protoc_insertion_point(field_set:room.GetSeatInfoResp.cnumber)
}

// -------------------------------------------------------------------

// CreateRoomReq

// required uint32 id = 1;
inline bool CreateRoomReq::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomReq::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CreateRoomReq::id() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomReq.id)
  return id_;
}
inline void CreateRoomReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:room.CreateRoomReq.id)
}

// required bytes account = 2;
inline bool CreateRoomReq::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomReq::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& CreateRoomReq::account() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomReq.account)
  return account_.GetNoArena();
}
inline void CreateRoomReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.CreateRoomReq.account)
}
#if LANG_CXX11
inline void CreateRoomReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.CreateRoomReq.account)
}
#endif
inline void CreateRoomReq::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.CreateRoomReq.account)
}
inline void CreateRoomReq::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.CreateRoomReq.account)
}
inline ::std::string* CreateRoomReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:room.CreateRoomReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomReq::release_account() {
  // @@protoc_insertion_point(field_release:room.CreateRoomReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:room.CreateRoomReq.account)
}

// -------------------------------------------------------------------

// CreateRoomResp

// required .base.ERROR_CODE result = 1;
inline bool CreateRoomResp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoomResp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoomResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoomResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE CreateRoomResp::result() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void CreateRoomResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.CreateRoomResp.result)
}

// optional bytes desc = 2;
inline bool CreateRoomResp::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoomResp::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoomResp::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoomResp::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& CreateRoomResp::desc() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomResp.desc)
  return desc_.GetNoArena();
}
inline void CreateRoomResp::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:room.CreateRoomResp.desc)
}
#if LANG_CXX11
inline void CreateRoomResp::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:room.CreateRoomResp.desc)
}
#endif
inline void CreateRoomResp::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:room.CreateRoomResp.desc)
}
inline void CreateRoomResp::set_desc(const void* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:room.CreateRoomResp.desc)
}
inline ::std::string* CreateRoomResp::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:room.CreateRoomResp.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRoomResp::release_desc() {
  // @@protoc_insertion_point(field_release:room.CreateRoomResp.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRoomResp::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:room.CreateRoomResp.desc)
}

// optional uint32 rid = 3;
inline bool CreateRoomResp::has_rid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoomResp::set_has_rid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoomResp::clear_has_rid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoomResp::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 CreateRoomResp::rid() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomResp.rid)
  return rid_;
}
inline void CreateRoomResp::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.CreateRoomResp.rid)
}

// optional uint32 index = 4;
inline bool CreateRoomResp::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateRoomResp::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateRoomResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateRoomResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CreateRoomResp::index() const {
  // @@protoc_insertion_point(field_get:room.CreateRoomResp.index)
  return index_;
}
inline void CreateRoomResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.CreateRoomResp.index)
}

// -------------------------------------------------------------------

// EnterRoomNtf

// required uint32 rid = 1;
inline bool EnterRoomNtf::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomNtf::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomNtf::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomNtf::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 EnterRoomNtf::rid() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomNtf.rid)
  return rid_;
}
inline void EnterRoomNtf::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomNtf.rid)
}

// required uint32 uid = 2;
inline bool EnterRoomNtf::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomNtf::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomNtf::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomNtf::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 EnterRoomNtf::uid() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomNtf.uid)
  return uid_;
}
inline void EnterRoomNtf::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomNtf.uid)
}

// required uint32 index = 3;
inline bool EnterRoomNtf::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterRoomNtf::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterRoomNtf::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterRoomNtf::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 EnterRoomNtf::index() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomNtf.index)
  return index_;
}
inline void EnterRoomNtf::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomNtf.index)
}

// required bool ready = 5;
inline bool EnterRoomNtf::has_ready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterRoomNtf::set_has_ready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterRoomNtf::clear_has_ready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterRoomNtf::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool EnterRoomNtf::ready() const {
  // @@protoc_insertion_point(field_get:room.EnterRoomNtf.ready)
  return ready_;
}
inline void EnterRoomNtf::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:room.EnterRoomNtf.ready)
}

// -------------------------------------------------------------------

// LeaveRoomNtf

// required uint32 rid = 1;
inline bool LeaveRoomNtf::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveRoomNtf::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveRoomNtf::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveRoomNtf::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 LeaveRoomNtf::rid() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomNtf.rid)
  return rid_;
}
inline void LeaveRoomNtf::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomNtf.rid)
}

// required uint32 uid = 2;
inline bool LeaveRoomNtf::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveRoomNtf::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveRoomNtf::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveRoomNtf::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 LeaveRoomNtf::uid() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomNtf.uid)
  return uid_;
}
inline void LeaveRoomNtf::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomNtf.uid)
}

// required uint32 index = 3;
inline bool LeaveRoomNtf::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveRoomNtf::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveRoomNtf::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveRoomNtf::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 LeaveRoomNtf::index() const {
  // @@protoc_insertion_point(field_get:room.LeaveRoomNtf.index)
  return index_;
}
inline void LeaveRoomNtf::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.LeaveRoomNtf.index)
}

// -------------------------------------------------------------------

// ReadyReq

// required uint32 uid = 1;
inline bool ReadyReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadyReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadyReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadyReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReadyReq::uid() const {
  // @@protoc_insertion_point(field_get:room.ReadyReq.uid)
  return uid_;
}
inline void ReadyReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyReq.uid)
}

// required uint32 rid = 2;
inline bool ReadyReq::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadyReq::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadyReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadyReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 ReadyReq::rid() const {
  // @@protoc_insertion_point(field_get:room.ReadyReq.rid)
  return rid_;
}
inline void ReadyReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyReq.rid)
}

// required bool ready = 3;
inline bool ReadyReq::has_ready() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadyReq::set_has_ready() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadyReq::clear_has_ready() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadyReq::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool ReadyReq::ready() const {
  // @@protoc_insertion_point(field_get:room.ReadyReq.ready)
  return ready_;
}
inline void ReadyReq::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyReq.ready)
}

// -------------------------------------------------------------------

// ReadyResp

// required .base.ERROR_CODE result = 1;
inline bool ReadyResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadyResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadyResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadyResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE ReadyResp::result() const {
  // @@protoc_insertion_point(field_get:room.ReadyResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void ReadyResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyResp.result)
}

// -------------------------------------------------------------------

// ReadyNtf

// required uint32 uid = 1;
inline bool ReadyNtf::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadyNtf::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadyNtf::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadyNtf::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReadyNtf::uid() const {
  // @@protoc_insertion_point(field_get:room.ReadyNtf.uid)
  return uid_;
}
inline void ReadyNtf::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyNtf.uid)
}

// required uint32 rid = 2;
inline bool ReadyNtf::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadyNtf::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadyNtf::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadyNtf::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 ReadyNtf::rid() const {
  // @@protoc_insertion_point(field_get:room.ReadyNtf.rid)
  return rid_;
}
inline void ReadyNtf::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyNtf.rid)
}

// required uint32 index = 3;
inline bool ReadyNtf::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadyNtf::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadyNtf::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadyNtf::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ReadyNtf::index() const {
  // @@protoc_insertion_point(field_get:room.ReadyNtf.index)
  return index_;
}
inline void ReadyNtf::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyNtf.index)
}

// required bool ready = 4;
inline bool ReadyNtf::has_ready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReadyNtf::set_has_ready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReadyNtf::clear_has_ready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReadyNtf::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool ReadyNtf::ready() const {
  // @@protoc_insertion_point(field_get:room.ReadyNtf.ready)
  return ready_;
}
inline void ReadyNtf::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:room.ReadyNtf.ready)
}

// -------------------------------------------------------------------

// GameBeginNtf

// required uint32 rid = 1;
inline bool GameBeginNtf::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameBeginNtf::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameBeginNtf::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameBeginNtf::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 GameBeginNtf::rid() const {
  // @@protoc_insertion_point(field_get:room.GameBeginNtf.rid)
  return rid_;
}
inline void GameBeginNtf::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.GameBeginNtf.rid)
}

// required uint32 first = 2;
inline bool GameBeginNtf::has_first() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameBeginNtf::set_has_first() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameBeginNtf::clear_has_first() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameBeginNtf::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 GameBeginNtf::first() const {
  // @@protoc_insertion_point(field_get:room.GameBeginNtf.first)
  return first_;
}
inline void GameBeginNtf::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:room.GameBeginNtf.first)
}

// -------------------------------------------------------------------

// RestartNtf

// required uint32 first = 1;
inline bool RestartNtf::has_first() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RestartNtf::set_has_first() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RestartNtf::clear_has_first() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RestartNtf::clear_first() {
  first_ = 0u;
  clear_has_first();
}
inline ::google::protobuf::uint32 RestartNtf::first() const {
  // @@protoc_insertion_point(field_get:room.RestartNtf.first)
  return first_;
}
inline void RestartNtf::set_first(::google::protobuf::uint32 value) {
  set_has_first();
  first_ = value;
  // @@protoc_insertion_point(field_set:room.RestartNtf.first)
}

// -------------------------------------------------------------------

// PutCardNtf

// required uint32 uid = 1;
inline bool PutCardNtf::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutCardNtf::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutCardNtf::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutCardNtf::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PutCardNtf::uid() const {
  // @@protoc_insertion_point(field_get:room.PutCardNtf.uid)
  return uid_;
}
inline void PutCardNtf::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.PutCardNtf.uid)
}

// repeated uint32 cid = 2;
inline int PutCardNtf::cid_size() const {
  return cid_.size();
}
inline void PutCardNtf::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 PutCardNtf::cid(int index) const {
  // @@protoc_insertion_point(field_get:room.PutCardNtf.cid)
  return cid_.Get(index);
}
inline void PutCardNtf::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.PutCardNtf.cid)
}
inline void PutCardNtf::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:room.PutCardNtf.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PutCardNtf::cid() const {
  // @@protoc_insertion_point(field_list:room.PutCardNtf.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PutCardNtf::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:room.PutCardNtf.cid)
  return &cid_;
}

// -------------------------------------------------------------------

// PutLandlordCardNtf

// required uint32 landlord = 1;
inline bool PutLandlordCardNtf::has_landlord() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutLandlordCardNtf::set_has_landlord() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutLandlordCardNtf::clear_has_landlord() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutLandlordCardNtf::clear_landlord() {
  landlord_ = 0u;
  clear_has_landlord();
}
inline ::google::protobuf::uint32 PutLandlordCardNtf::landlord() const {
  // @@protoc_insertion_point(field_get:room.PutLandlordCardNtf.landlord)
  return landlord_;
}
inline void PutLandlordCardNtf::set_landlord(::google::protobuf::uint32 value) {
  set_has_landlord();
  landlord_ = value;
  // @@protoc_insertion_point(field_set:room.PutLandlordCardNtf.landlord)
}

// repeated uint32 cid = 2;
inline int PutLandlordCardNtf::cid_size() const {
  return cid_.size();
}
inline void PutLandlordCardNtf::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 PutLandlordCardNtf::cid(int index) const {
  // @@protoc_insertion_point(field_get:room.PutLandlordCardNtf.cid)
  return cid_.Get(index);
}
inline void PutLandlordCardNtf::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.PutLandlordCardNtf.cid)
}
inline void PutLandlordCardNtf::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:room.PutLandlordCardNtf.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PutLandlordCardNtf::cid() const {
  // @@protoc_insertion_point(field_list:room.PutLandlordCardNtf.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PutLandlordCardNtf::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:room.PutLandlordCardNtf.cid)
  return &cid_;
}

// -------------------------------------------------------------------

// LandlordNtf

// required uint32 cindex = 1;
inline bool LandlordNtf::has_cindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LandlordNtf::set_has_cindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LandlordNtf::clear_has_cindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LandlordNtf::clear_cindex() {
  cindex_ = 0u;
  clear_has_cindex();
}
inline ::google::protobuf::uint32 LandlordNtf::cindex() const {
  // @@protoc_insertion_point(field_get:room.LandlordNtf.cindex)
  return cindex_;
}
inline void LandlordNtf::set_cindex(::google::protobuf::uint32 value) {
  set_has_cindex();
  cindex_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordNtf.cindex)
}

// required uint32 nindex = 2;
inline bool LandlordNtf::has_nindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LandlordNtf::set_has_nindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LandlordNtf::clear_has_nindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LandlordNtf::clear_nindex() {
  nindex_ = 0u;
  clear_has_nindex();
}
inline ::google::protobuf::uint32 LandlordNtf::nindex() const {
  // @@protoc_insertion_point(field_get:room.LandlordNtf.nindex)
  return nindex_;
}
inline void LandlordNtf::set_nindex(::google::protobuf::uint32 value) {
  set_has_nindex();
  nindex_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordNtf.nindex)
}

// required bool call = 3;
inline bool LandlordNtf::has_call() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LandlordNtf::set_has_call() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LandlordNtf::clear_has_call() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LandlordNtf::clear_call() {
  call_ = false;
  clear_has_call();
}
inline bool LandlordNtf::call() const {
  // @@protoc_insertion_point(field_get:room.LandlordNtf.call)
  return call_;
}
inline void LandlordNtf::set_call(bool value) {
  set_has_call();
  call_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordNtf.call)
}

// required bool ctype = 4;
inline bool LandlordNtf::has_ctype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LandlordNtf::set_has_ctype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LandlordNtf::clear_has_ctype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LandlordNtf::clear_ctype() {
  ctype_ = false;
  clear_has_ctype();
}
inline bool LandlordNtf::ctype() const {
  // @@protoc_insertion_point(field_get:room.LandlordNtf.ctype)
  return ctype_;
}
inline void LandlordNtf::set_ctype(bool value) {
  set_has_ctype();
  ctype_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordNtf.ctype)
}

// required bool ntype = 5;
inline bool LandlordNtf::has_ntype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LandlordNtf::set_has_ntype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LandlordNtf::clear_has_ntype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LandlordNtf::clear_ntype() {
  ntype_ = false;
  clear_has_ntype();
}
inline bool LandlordNtf::ntype() const {
  // @@protoc_insertion_point(field_get:room.LandlordNtf.ntype)
  return ntype_;
}
inline void LandlordNtf::set_ntype(bool value) {
  set_has_ntype();
  ntype_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordNtf.ntype)
}

// -------------------------------------------------------------------

// LandlordReq

// required uint32 uid = 1;
inline bool LandlordReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LandlordReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LandlordReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LandlordReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 LandlordReq::uid() const {
  // @@protoc_insertion_point(field_get:room.LandlordReq.uid)
  return uid_;
}
inline void LandlordReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordReq.uid)
}

// required uint32 rid = 2;
inline bool LandlordReq::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LandlordReq::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LandlordReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LandlordReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 LandlordReq::rid() const {
  // @@protoc_insertion_point(field_get:room.LandlordReq.rid)
  return rid_;
}
inline void LandlordReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordReq.rid)
}

// required bool call = 3;
inline bool LandlordReq::has_call() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LandlordReq::set_has_call() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LandlordReq::clear_has_call() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LandlordReq::clear_call() {
  call_ = false;
  clear_has_call();
}
inline bool LandlordReq::call() const {
  // @@protoc_insertion_point(field_get:room.LandlordReq.call)
  return call_;
}
inline void LandlordReq::set_call(bool value) {
  set_has_call();
  call_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordReq.call)
}

// -------------------------------------------------------------------

// LandlordResp

// required .base.ERROR_CODE result = 1;
inline bool LandlordResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LandlordResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LandlordResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LandlordResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE LandlordResp::result() const {
  // @@protoc_insertion_point(field_get:room.LandlordResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void LandlordResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.LandlordResp.result)
}

// -------------------------------------------------------------------

// PlayReq

// required uint32 uid = 1;
inline bool PlayReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PlayReq::uid() const {
  // @@protoc_insertion_point(field_get:room.PlayReq.uid)
  return uid_;
}
inline void PlayReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.PlayReq.uid)
}

// required uint32 rid = 2;
inline bool PlayReq::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayReq::set_has_rid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 PlayReq::rid() const {
  // @@protoc_insertion_point(field_get:room.PlayReq.rid)
  return rid_;
}
inline void PlayReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.PlayReq.rid)
}

// repeated uint32 cid = 3;
inline int PlayReq::cid_size() const {
  return cid_.size();
}
inline void PlayReq::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 PlayReq::cid(int index) const {
  // @@protoc_insertion_point(field_get:room.PlayReq.cid)
  return cid_.Get(index);
}
inline void PlayReq::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.PlayReq.cid)
}
inline void PlayReq::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:room.PlayReq.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayReq::cid() const {
  // @@protoc_insertion_point(field_list:room.PlayReq.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayReq::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:room.PlayReq.cid)
  return &cid_;
}

// -------------------------------------------------------------------

// PlayResp

// required .base.ERROR_CODE result = 1;
inline bool PlayResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE PlayResp::result() const {
  // @@protoc_insertion_point(field_get:room.PlayResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void PlayResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.PlayResp.result)
}

// optional uint32 next = 2;
inline bool PlayResp::has_next() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayResp::set_has_next() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayResp::clear_has_next() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayResp::clear_next() {
  next_ = 0u;
  clear_has_next();
}
inline ::google::protobuf::uint32 PlayResp::next() const {
  // @@protoc_insertion_point(field_get:room.PlayResp.next)
  return next_;
}
inline void PlayResp::set_next(::google::protobuf::uint32 value) {
  set_has_next();
  next_ = value;
  // @@protoc_insertion_point(field_set:room.PlayResp.next)
}

// -------------------------------------------------------------------

// PlayNtf

// required uint32 current = 1;
inline bool PlayNtf::has_current() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayNtf::set_has_current() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayNtf::clear_has_current() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayNtf::clear_current() {
  current_ = 0u;
  clear_has_current();
}
inline ::google::protobuf::uint32 PlayNtf::current() const {
  // @@protoc_insertion_point(field_get:room.PlayNtf.current)
  return current_;
}
inline void PlayNtf::set_current(::google::protobuf::uint32 value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:room.PlayNtf.current)
}

// required uint32 next = 2;
inline bool PlayNtf::has_next() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayNtf::set_has_next() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayNtf::clear_has_next() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayNtf::clear_next() {
  next_ = 0u;
  clear_has_next();
}
inline ::google::protobuf::uint32 PlayNtf::next() const {
  // @@protoc_insertion_point(field_get:room.PlayNtf.next)
  return next_;
}
inline void PlayNtf::set_next(::google::protobuf::uint32 value) {
  set_has_next();
  next_ = value;
  // @@protoc_insertion_point(field_set:room.PlayNtf.next)
}

// repeated uint32 cid = 3;
inline int PlayNtf::cid_size() const {
  return cid_.size();
}
inline void PlayNtf::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 PlayNtf::cid(int index) const {
  // @@protoc_insertion_point(field_get:room.PlayNtf.cid)
  return cid_.Get(index);
}
inline void PlayNtf::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.PlayNtf.cid)
}
inline void PlayNtf::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:room.PlayNtf.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayNtf::cid() const {
  // @@protoc_insertion_point(field_list:room.PlayNtf.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayNtf::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:room.PlayNtf.cid)
  return &cid_;
}

// required uint32 multiple = 4;
inline bool PlayNtf::has_multiple() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayNtf::set_has_multiple() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayNtf::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayNtf::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 PlayNtf::multiple() const {
  // @@protoc_insertion_point(field_get:room.PlayNtf.multiple)
  return multiple_;
}
inline void PlayNtf::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:room.PlayNtf.multiple)
}

// -------------------------------------------------------------------

// GameOverNtf

// required uint32 rid = 1;
inline bool GameOverNtf::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameOverNtf::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameOverNtf::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameOverNtf::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 GameOverNtf::rid() const {
  // @@protoc_insertion_point(field_get:room.GameOverNtf.rid)
  return rid_;
}
inline void GameOverNtf::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.GameOverNtf.rid)
}

// required uint32 winner = 2;
inline bool GameOverNtf::has_winner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameOverNtf::set_has_winner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameOverNtf::clear_has_winner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameOverNtf::clear_winner() {
  winner_ = 0u;
  clear_has_winner();
}
inline ::google::protobuf::uint32 GameOverNtf::winner() const {
  // @@protoc_insertion_point(field_get:room.GameOverNtf.winner)
  return winner_;
}
inline void GameOverNtf::set_winner(::google::protobuf::uint32 value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:room.GameOverNtf.winner)
}

// required uint32 landlord = 3;
inline bool GameOverNtf::has_landlord() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameOverNtf::set_has_landlord() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameOverNtf::clear_has_landlord() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameOverNtf::clear_landlord() {
  landlord_ = 0u;
  clear_has_landlord();
}
inline ::google::protobuf::uint32 GameOverNtf::landlord() const {
  // @@protoc_insertion_point(field_get:room.GameOverNtf.landlord)
  return landlord_;
}
inline void GameOverNtf::set_landlord(::google::protobuf::uint32 value) {
  set_has_landlord();
  landlord_ = value;
  // @@protoc_insertion_point(field_set:room.GameOverNtf.landlord)
}

// required uint32 multiple = 4;
inline bool GameOverNtf::has_multiple() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameOverNtf::set_has_multiple() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameOverNtf::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameOverNtf::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 GameOverNtf::multiple() const {
  // @@protoc_insertion_point(field_get:room.GameOverNtf.multiple)
  return multiple_;
}
inline void GameOverNtf::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:room.GameOverNtf.multiple)
}

// -------------------------------------------------------------------

// LostFromRoomMsg

// required uint32 rid = 1;
inline bool LostFromRoomMsg::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LostFromRoomMsg::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LostFromRoomMsg::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LostFromRoomMsg::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 LostFromRoomMsg::rid() const {
  // @@protoc_insertion_point(field_get:room.LostFromRoomMsg.rid)
  return rid_;
}
inline void LostFromRoomMsg::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.LostFromRoomMsg.rid)
}

// -------------------------------------------------------------------

// ReconnectReq

// required uint32 rid = 1;
inline bool ReconnectReq::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReconnectReq::set_has_rid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReconnectReq::clear_has_rid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReconnectReq::clear_rid() {
  rid_ = 0u;
  clear_has_rid();
}
inline ::google::protobuf::uint32 ReconnectReq::rid() const {
  // @@protoc_insertion_point(field_get:room.ReconnectReq.rid)
  return rid_;
}
inline void ReconnectReq::set_rid(::google::protobuf::uint32 value) {
  set_has_rid();
  rid_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectReq.rid)
}

// required uint32 uid = 2;
inline bool ReconnectReq::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReconnectReq::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReconnectReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReconnectReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ReconnectReq::uid() const {
  // @@protoc_insertion_point(field_get:room.ReconnectReq.uid)
  return uid_;
}
inline void ReconnectReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectReq.uid)
}

// -------------------------------------------------------------------

// ReconnectResp

// required .base.ERROR_CODE result = 1;
inline bool ReconnectResp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReconnectResp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReconnectResp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReconnectResp::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::base::ERROR_CODE ReconnectResp::result() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.result)
  return static_cast< ::base::ERROR_CODE >(result_);
}
inline void ReconnectResp::set_result(::base::ERROR_CODE value) {
  assert(::base::ERROR_CODE_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.result)
}

// required uint32 index = 2;
inline bool ReconnectResp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReconnectResp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReconnectResp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReconnectResp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ReconnectResp::index() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.index)
  return index_;
}
inline void ReconnectResp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.index)
}

// required uint32 current = 3;
inline bool ReconnectResp::has_current() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReconnectResp::set_has_current() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReconnectResp::clear_has_current() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReconnectResp::clear_current() {
  current_ = 0u;
  clear_has_current();
}
inline ::google::protobuf::uint32 ReconnectResp::current() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.current)
  return current_;
}
inline void ReconnectResp::set_current(::google::protobuf::uint32 value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.current)
}

// required uint32 landlord = 4;
inline bool ReconnectResp::has_landlord() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReconnectResp::set_has_landlord() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReconnectResp::clear_has_landlord() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReconnectResp::clear_landlord() {
  landlord_ = 0u;
  clear_has_landlord();
}
inline ::google::protobuf::uint32 ReconnectResp::landlord() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.landlord)
  return landlord_;
}
inline void ReconnectResp::set_landlord(::google::protobuf::uint32 value) {
  set_has_landlord();
  landlord_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.landlord)
}

// repeated uint32 otherid = 5;
inline int ReconnectResp::otherid_size() const {
  return otherid_.size();
}
inline void ReconnectResp::clear_otherid() {
  otherid_.Clear();
}
inline ::google::protobuf::uint32 ReconnectResp::otherid(int index) const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.otherid)
  return otherid_.Get(index);
}
inline void ReconnectResp::set_otherid(int index, ::google::protobuf::uint32 value) {
  otherid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.ReconnectResp.otherid)
}
inline void ReconnectResp::add_otherid(::google::protobuf::uint32 value) {
  otherid_.Add(value);
  // @@protoc_insertion_point(field_add:room.ReconnectResp.otherid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReconnectResp::otherid() const {
  // @@protoc_insertion_point(field_list:room.ReconnectResp.otherid)
  return otherid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReconnectResp::mutable_otherid() {
  // @@protoc_insertion_point(field_mutable_list:room.ReconnectResp.otherid)
  return &otherid_;
}

// repeated uint32 cid = 6;
inline int ReconnectResp::cid_size() const {
  return cid_.size();
}
inline void ReconnectResp::clear_cid() {
  cid_.Clear();
}
inline ::google::protobuf::uint32 ReconnectResp::cid(int index) const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.cid)
  return cid_.Get(index);
}
inline void ReconnectResp::set_cid(int index, ::google::protobuf::uint32 value) {
  cid_.Set(index, value);
  // @@protoc_insertion_point(field_set:room.ReconnectResp.cid)
}
inline void ReconnectResp::add_cid(::google::protobuf::uint32 value) {
  cid_.Add(value);
  // @@protoc_insertion_point(field_add:room.ReconnectResp.cid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReconnectResp::cid() const {
  // @@protoc_insertion_point(field_list:room.ReconnectResp.cid)
  return cid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReconnectResp::mutable_cid() {
  // @@protoc_insertion_point(field_mutable_list:room.ReconnectResp.cid)
  return &cid_;
}

// required .room.ReconnectResp.PlayState state = 7;
inline bool ReconnectResp::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReconnectResp::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReconnectResp::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReconnectResp::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::room::ReconnectResp_PlayState ReconnectResp::state() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.state)
  return static_cast< ::room::ReconnectResp_PlayState >(state_);
}
inline void ReconnectResp::set_state(::room::ReconnectResp_PlayState value) {
  assert(::room::ReconnectResp_PlayState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.state)
}

// required uint32 multiple = 8;
inline bool ReconnectResp::has_multiple() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReconnectResp::set_has_multiple() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReconnectResp::clear_has_multiple() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReconnectResp::clear_multiple() {
  multiple_ = 0u;
  clear_has_multiple();
}
inline ::google::protobuf::uint32 ReconnectResp::multiple() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.multiple)
  return multiple_;
}
inline void ReconnectResp::set_multiple(::google::protobuf::uint32 value) {
  set_has_multiple();
  multiple_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.multiple)
}

// required uint32 noplay = 9;
inline bool ReconnectResp::has_noplay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReconnectResp::set_has_noplay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReconnectResp::clear_has_noplay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReconnectResp::clear_noplay() {
  noplay_ = 0u;
  clear_has_noplay();
}
inline ::google::protobuf::uint32 ReconnectResp::noplay() const {
  // @@protoc_insertion_point(field_get:room.ReconnectResp.noplay)
  return noplay_;
}
inline void ReconnectResp::set_noplay(::google::protobuf::uint32 value) {
  set_has_noplay();
  noplay_ = value;
  // @@protoc_insertion_point(field_set:room.ReconnectResp.noplay)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace room

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::room::RoomInfo_RoomState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::room::RoomInfo_RoomState>() {
  return ::room::RoomInfo_RoomState_descriptor();
}
template <> struct is_proto_enum< ::room::ReconnectResp_PlayState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::room::ReconnectResp_PlayState>() {
  return ::room::ReconnectResp_PlayState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_room_2eproto__INCLUDED
